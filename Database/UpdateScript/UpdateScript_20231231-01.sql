IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ROLES]') AND type in (N'U'))
DROP TABLE [dbo].[ROLES]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ROLES](
	[ROLE_ID] [INT] NOT NULL,
	[ROLES] [nvarchar](100) NOT NULL,
	[SYNCOPERATION] [CHAR](1) NOT NULL,
	[SYNCVERSION] [DATETIME] NOT NULL
PRIMARY KEY CLUSTERED 
(
	[ROLE_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
)
GO

IF NOT EXISTS (SELECT TOP 1 1 FROM ROLES WHERE ROLE_ID = '1')
BEGIN
	INSERT INTO ROLES
	VALUES ('1','Admin','A', GETDATE())
END
GO

IF NOT EXISTS (SELECT TOP 1 1 FROM ROLES WHERE ROLES = '2')
BEGIN
	INSERT INTO ROLES
	VALUES ('2','Faculty User','A', GETDATE())
END
GO

IF EXISTS (SELECT * FROM ACC_USER WHERE USER_ID = 'ADMIN0001')
BEGIN
	UPDATE ACC_USER
	SET ROLES = 1 WHERE USER_ID = 'ADMIN0001'
END
GO

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ACC_USER' AND COLUMN_NAME = 'ROLES')
BEGIN
	ALTER TABLE ACC_USER
	ALTER COLUMN ROLES INT

	EXEC sp_rename 'ACC_USER.ROLES', 'ROLE_ID', 'COLUMN'
END
GO

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ACC_USER' AND COLUMN_NAME = 'CREATED_BY')
BEGIN
	ALTER TABLE ACC_USER
	DROP COLUMN CREATED_BY
END
GO

DROP PROCEDURE IF EXISTS CheckUserRegister
GO
CREATE PROCEDURE CheckUserRegister
(
	@EMAIL NVARCHAR(MAX),
	@USER_ID NVARCHAR (100),
	@ISVALID BIT OUT
)
AS
BEGIN
SET @ISVALID = (SELECT COUNT(1) FROM ACC_USER WHERE (EMAIL = @EMAIL OR USER_ID = @USER_ID) AND SYNCOPERATION<>'D')
END
GO

DROP PROCEDURE IF EXISTS [dbo].[RegisterUser]
GO
CREATE PROCEDURE RegisterUser
(
	@EMAIL NVARCHAR(MAX),
	@USER_ID NVARCHAR(100),
	@PASSWORD NVARCHAR(100),
	@ROLEID INT
)
AS
BEGIN
	INSERT INTO ACC_USER
	VALUES
	(@USER_ID, @PASSWORD, @EMAIL, @ROLEID, GETDATE(), 'A',GETDATE())
END
GO
